# Generated by Django 3.0.2 on 2020-02-04 00:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=3)),
                ('quantity', models.PositiveIntegerField()),
                ('warning_quantity', models.PositiveIntegerField()),
                ('is_chemical', models.BooleanField()),
                ('pack_size', models.PositiveSmallIntegerField()),
                ('for_sale', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='StockCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=28)),
                ('last_name', models.CharField(max_length=28)),
                ('charge_code', models.CharField(max_length=16)),
                ('pays_vat', models.BooleanField()),
                ('allowed_chemicals', models.BooleanField()),
                ('enabled', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=28)),
                ('last_name', models.CharField(max_length=28)),
                ('login_code', models.CharField(max_length=16)),
                ('access_level', models.CharField(choices=[('TR', 'Trainee'), ('BA', 'Basic'), ('MA', 'Manager')], default='TR', max_length=2)),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StockCheckItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observed_quantity', models.PositiveIntegerField()),
                ('expected_quantity', models.PositiveIntegerField()),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Item')),
                ('stock_check_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.StockCheck')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('returned_quantity', models.PositiveIntegerField()),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Item')),
                ('sale_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Sale')),
            ],
        ),
        migrations.AddField(
            model_name='stockcheck',
            name='staff_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Staff'),
        ),
        migrations.AddField(
            model_name='sale',
            name='customer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Customer'),
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('reason', models.CharField(choices=[('DA', 'Damaged'), ('NN', 'Not Needed'), ('WI', 'Wrong Item')], max_length=2)),
                ('quantity', models.PositiveIntegerField()),
                ('sale_item_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.SaleItem')),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Customer')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Staff')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('status', models.CharField(choices=[('TO', 'To Order'), ('ON', 'On Order'), ('CA', 'Cancelled'), ('CO', 'Completed')], default='TO', max_length=2)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Item')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Staff')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56)),
                ('head_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='department_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Department'),
        ),
    ]
